@model MaterialCreateViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@{
    ViewBag.Title = "Новый источник";
    Layout = "_Layout";
}
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<input type="hidden" id="RequestVerificationToken" 
       name="RequestVerificationToken" value="@GetAntiXsrfRequestToken()">  

<div class="page page-ui-portlets">
    <div class="pageheader">

        <h2>@ViewBag.Title</h2>

        <div class="page-bar">

            <ul class="page-breadcrumb">
                <li>
                    <a asp-action="Details" asp-controller="Account"><i class="fa fa-home"></i> Guide</a>
                </li>
                <li>
                    <a asp-action="Index" asp-controller="SourceManage"> Библиотека</a>
                </li>
                <li>
                    <a asp-action="Create" asp-controller="SourceManage"> Добавить</a>
                </li>
            </ul>
        </div>
    </div>
    <span id="errorText" style="color: red"></span>

    <div class="row">

        <div class="tile-body">
            <form class="create-form" asp-action="Create" asp-controller="SourceManage" asp-area="Admin" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly"></div>
                @{ Html.RenderPartial("PartialViews/FormPartial", Model); }
                
                <input type="hidden" value="@Model.Id" id="postId" asp-for="Id">
            </form>
        </div>
        <!-- /tile body -->

    </div>


    <!-- Modal -->
    <div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" style="margin-left: 250px">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title custom-font">Новый Шаблон</h3>
                </div>
                <div>
                    <div class="p-3">
                        <div >
                            <label>Название шаблона<span class="text-danger">*</span></label><br/>
                            <input class="form-control" type="text" id="templateName">
                        </div>
                        <div >
                            <label>Заголовок<span class="text-danger">*</span></label><br/>
                            <input class="form-control" type="text" id="templateTitle">
                        </div>
                        <div>
                            <label>Содержание<span class="text-danger">*</span></label>
                            <textarea  name="ContentTemplate" type="templateContent"></textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-success btn-ef btn-ef-3 btn-ef-3c" data-dismiss="modal" id="templateButton"><i class="fa fa-arrow-right"></i>Создать</button>
                    <button class="btn btn-lightred btn-ef btn-ef-4 btn-ef-4c" data-dismiss="modal"><i class="fa fa-arrow-left"></i> Отменить</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal -->

</div>

     
@section Scripts
{
    <script>
        CKEDITOR.replace('textContent');
    </script>
    <script>
        CKEDITOR.replace('ContentTemplate');
    </script>
    <script >
    
        $('#submit').on('click', function(e) {
            e.preventDefault();
            let businessProcessesArray = [];               
            let getbusinessP = document.getElementById('businessProcesses-row');
            let getBPName = getbusinessP.getElementsByTagName('span');
            for (let i=0; i < getBPName.length; i++){
                businessProcessesArray.push(getBPName[i].innerHTML);
            }
            let editorData = CKEDITOR.instances.textContent.getData();
            let formData = new FormData();
            let coverFile = document.getElementById('coverFile');
            let sourceFile = document.getElementById('sourceFile');    
            formData.append('__RequestVerificationToken', $('#RequestVerificationToken').val());
            formData.append(coverFile.getAttribute('name'), coverFile.files[0]);
            formData.append(sourceFile.getAttribute('name'), sourceFile.files[0]);
            formData.append('Title', $('#name').val());
            formData.append('TextContent', editorData);
            formData.append('Keys', $('#keyWord').val());
            formData.append('TypeContentId', $('#typeContentId').val());
            formData.append('CategoryId', $('#category').val());
            formData.append('TypeId', $('#typeId').val());
            formData.append('TypeStateId', $('#typeStateId').val());
            formData.append('Author', $('#author').val());
            formData.append('AdditionalInformation', $('#additional').val());
            formData.append('BusinessProcesses', String(businessProcessesArray));
              
            $.ajax({
                url: '@Url.Action("Create", "SourceManage", new {area = "Admin"})',                            
                type: 'POST',           
                traditional: true,                 
                data: formData,                                                                                                             
                contentType: false,
                processData: false,          
                success: function(response) {
                    if (response === true){
                        window.location.href = "@Url.Action("Index","SourceManage", new{area="Admin"})"
                    }
                    else if (response === "falseData"){
                        $('#errorText').html('Вы не ввели название. Проверьте название')
                    }
                    else if (response === "falseSourceType"){
                        $('#errorText').html('Неверный формат источника')
                    }
                    else{
                        $('#errorText').html('Неверный формат обложки')
                    }
                }                                                        
            });                   
        });
    
        function sendTemplate() {
            let id = $("#selectTemplate").val();
            $.ajax({
                url: '@Url.Action("ValTemplate", "SourceManage", new {area = "Admin"})',
                type: 'GET',
                data: { 
                    'templatesId': id},
                success: function(data) {                                      
                    CKEDITOR.instances['TextContent'].setData(data.contentTemplate);
                },                  
            });
        }    
        var loadTypeContent = function(){
            var typeContentInput = $('#typeContentInput').val();
            $("#typeContent-row").load('@Url.Action("CreateTypeContentAjax", "SourceManage")',{Name: typeContentInput});
        };
         var loadTypeState = function(){
             var typeStateInput = $('#typeStateInput').val();
             $("#typeState-row").load('@Url.Action("CreateTypeStateAjax", "SourceManage")',{Name: typeStateInput});
        };
        var loadCategories = function(){
            var catInput = $('#catInput').val();
            $("#categories-row").load('@Url.Action("CreateCategoryAjax", "SourceManage")',{Name: catInput});
        };
        var loadTemplate = function(){
            var templateTitle = $('#templateTitle').val();
            var templateContent = CKEDITOR.instances['ContentTemplate'].getData();
        var templateInput = $('#templateName').val();
            $("#template-row").load('@Url.Action("CreateTemplateAjax", "SourceManage")',{Name: templateInput, ContentTemplate : templateContent, Title:templateTitle});
         };
        var loadTypes = function(){
            var typeInput = $('#typeInput').val();
            $("#types-row").load('@Url.Action("CreateTypeAjax", "SourceManage")',{Name: typeInput});
        };
        
        var deleteTypeContent = function(typeContentId){
            $("#typeContent-row").load('@Url.Action("DeleteTypeContentAjax", "SourceManage")', {Id: typeContentId});
        };
        var deleteTypeState = function(typeStateId){
            $("#typeContent-row").load('@Url.Action("DeleteTypeStateAjax", "SourceManage")', {Id: typeStateId});
        };
        var deleteCategory = function(categoryId){
            $("#categories-row").load('@Url.Action("DeleteCategoryAjax", "SourceManage")', {Id: categoryId});
        };
        var deleteTemplate = function(templateId){
            $("#template-row").load('@Url.Action("DeleteTemplateAjax", "SourceManage")', {Id: templateId});
        };
        var deleteType = function(typeId){
            $("#types-row").load('@Url.Action("DeleteTypeAjax", "SourceManage")', {Id: typeId});
        };
        $(document).ready(function(){
            loadTypeState();
            loadTypeContent();
            loadTemplate();
            loadCategories();
            loadTypes();
            
            $('body').on('click','#typeContentButton',function(event){
                 event.preventDefault();
                 setTimeout(loadTypeContent, 200)
            });
             $('body').on('click','#typeStateButton',function(event){
                  event.preventDefault();
                  setTimeout(loadTypeState, 200)
                        });
            $('body').on('click','#catButton',function(event){
                 event.preventDefault();
                 setTimeout(loadCategories, 200)
            });
            $('body').on('click','#templateButton',function(event){
                 event.preventDefault();
                 setTimeout(loadTemplate, 200)
            });
            $('body').on('click','#typeButton',function(event){
                 event.preventDefault();
                 setTimeout(loadTypes, 200)
            });
            $('body').on('click','.buttonDeleteTypeContent',function(event){
                 event.preventDefault();
                  setTimeout(function() {deleteTypeContent(event.currentTarget.value)}, 200)
            });
            $('body').on('click','.buttonDeleteTypeState',function(event){
                 event.preventDefault();
                 setTimeout(function() {deleteTypeState(event.currentTarget.value)}, 200)
             });
            $('body').on('click','.buttonDeleteCat',function(event){
                 event.preventDefault();
                 setTimeout(function() {deleteCategory(event.currentTarget.value)}, 200)
            });
            $('body').on('click','.buttonDeleteTemplate',function(event){
                 event.preventDefault();
                 setTimeout(function() {deleteTemplate(event.currentTarget.value)}, 200)
                 });
            $('body').on('click','.buttonDeleteType',function(event){
                 event.preventDefault();
                 setTimeout(function() {deleteType(event.currentTarget.value)}, 200)
            });
        })
    </script>
}
