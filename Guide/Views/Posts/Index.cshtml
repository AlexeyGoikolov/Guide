@model List<Post>

@{
    ViewBag.Title = "Список материалов";
    Layout = "_Layout";
}

 <div class="pageheader">

        <h2>@ViewBag.Title</h2>

        <div class="page-bar">

            <ul class="page-breadcrumb">
                <li>
                    <a href="index.html"><i class="fa fa-home"></i> Guide</a>
                </li>
                <li>
                    <a href="#">Материалы</a>
                </li>
                <li>
                    <a href="tables-datatables.html">Список</a>
                </li>
            </ul>
        </div>
    </div>
<section id="content">
   
    <div class="page page-tables-datatables">
        <!-- row -->
        <div class="row">
            <!-- col -->
            <div class="col-md-12">
                <!-- tile -->
                <section class="tile">
                    <!-- tile header -->
                    <div class="tile-header dvd dvd-btm">
                        <h1 class="custom-font">
                            <strong></strong>
                        </h1>
                        <ul class="controls">
                            <li>
                                <a role="button" tabindex="0" asp-action="Create" asp-controller="Posts"><i class="fa fa-plus mr-5"></i>Добавить</a>
                            </li>

                        </ul>
                    </div>
                    <!-- /tile header -->
                    <!-- tile body -->
                    <div class="tile-body">
                        <div class="table-responsive">
                            <table class="table table-custom" id="editable-usage">
                                <thead>
                                <tr>
                                    <th>Название</th>
                                    <th>Автор</th>
                                    <th>Категория</th>
                                    <th>Тип</th>
                                    <th>Дата создания</th>
                                    <th style="width: 160px;" class="no-sort">Actions</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (Post post in @Model)
                                {
                                    <tr class="odd gradeX">
                                        <td>
                                            <a asp-action="Details" asp-controller="Posts" asp-route-id="@post.Id">@post.Title</a>
                                        </td>
                                        <td>@post.Author</td>
                                        <td>@post.Category.Name</td>
                                        <td>@post.Type.Name</td>
                                        <td> @post.DateOfCreate.ToShortDateString()</td>

                                        <td >
                                            <a role="button" asp-action="" asp-controller="Posts" asp-route-id="@post.Id" tabindex="0" class="edit text-primary text-uppercase text-strong text-sm mr-10">Изменить</a>
                                            <a role="button" tabindex="0" class="delete text-danger text-uppercase text-strong text-sm mr-10" asp-action="" asp-controller="Posts" asp-route-id="@post.Id">Удалить</a>
                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- /tile body -->

                </section>
                <!-- /tile -->
            </div>
            <!-- /col -->
        </div>
        <!-- /row -->
    </div>
</section>

@section Scripts
{
    <script>
              $(window).load(function(){                                           
              //initialize editable datatable             
                             function restoreRow(oTable, nRow) {
                                 var aData = oTable.row(nRow).data();
                                 var jqTds = $('>td', nRow);
             
                                 for (var i = 0, iLen = jqTds.length; i < iLen; i++) {
                                     oTable.row(nRow).data(aData[i]);
                                 }
             
                                 oTable.draw();
                             }
             
                             function editRow(oTable, nRow) {
                                 var aData = oTable.row(nRow).data();
                                 var jqTds = $('>td', nRow);
                                 jqTds[0].innerHTML = '<input type="text" class="form-control input-sm" value="' + aData[0] + '">';
                                 jqTds[1].innerHTML = '<input type="text" class="form-control input-sm" value="' + aData[1] + '">';
                                 jqTds[2].innerHTML = '<input type="text" class="form-control input-sm" value="' + aData[2] + '">';
                                 jqTds[3].innerHTML = '<input type="text" class="form-control input-sm" value="' + aData[3] + '">';
                                 jqTds[4].innerHTML = '<input type="text" class="form-control input-sm" value="' + aData[4] + '">';
                                 jqTds[5].innerHTML = '<a role="button" tabindex="0" class="edit text-success text-uppercase text-strong text-sm mr-10">Save</a><a role="button" tabindex="0" class="cancel text-warning text-uppercase text-strong text-sm mr-10">Cancel</a>';
                             }
             
                             function saveRow(oTable, nRow) {
                                 var jqInputs = $('input', nRow);
                                 oTable.cell(nRow, 0).data(jqInputs[0].value);
                                 oTable.cell(nRow, 1).data(jqInputs[1].value);
                                 oTable.cell(nRow, 2).data(jqInputs[2].value);
                                 oTable.cell(nRow, 3).data(jqInputs[3].value);
                                 oTable.cell(nRow, 4).data(jqInputs[4].value);
                                 oTable.cell(nRow, 5).data('<a role="button" tabindex="0" class="edit text-primary text-uppercase text-strong text-sm mr-10">Edit</a><a role="button" tabindex="0" class="delete text-danger text-uppercase text-strong text-sm mr-10">Remove</a>');
                                 oTable.draw();
                             }
             
                             var table2 = $('#editable-usage');
             
                             var oTable = $('#editable-usage').DataTable({
                                 "aoColumnDefs": [
                                   { 'bSortable': false, 'aTargets': [ "no-sort" ] }
                                 ]
                             });
             
                             var nEditing = null;
                             var nNew = false;
             
                             $('#add-entry').click(function (e) {
                                 e.preventDefault();
             
                                 if (nNew && nEditing) {
                                     if (confirm("Previous row is not saved yet. Save it ?")) {
                                         saveRow(oTable, nEditing); // save
                                         $(nEditing).find("td:first").html("Untitled");
                                         nEditing = null;
                                         nNew = false;
             
                                     } else {
                                         oTable.row(nEditing).remove().draw(); // cancel
                                         nEditing = null;
                                         nNew = false;
             
                                         return;
                                     }
                                 }
             
                                 var aiNew = oTable.row.add(['', '', '', '', '', '', '']).draw();
                                 var nRow = oTable.row(aiNew[0]).node();
                                 editRow(oTable, nRow);
                                 nEditing = nRow;
                                 nNew = true;
                             });
             
                             table2.on('click', '.delete', function (e) {
                                 e.preventDefault();
             
                                 if (confirm("Are you sure?") == false) {
                                     return;
                                 }
             
                                 var nRow = $(this).parents('tr')[0];
                                 oTable.row(nRow).remove().draw();
                                 alert("Deleted!");
                             });
             
                             table2.on('click', '.cancel', function (e) {
                                 e.preventDefault();
                                 if (nNew) {
                                     oTable.row(nEditing).remove().draw();
                                     nEditing = null;
                                     nNew = false;
                                 } else {
                                     restoreRow(oTable, nEditing);
                                     nEditing = null;
                                 }
                             });
             
                             table2.on('click', '.edit', function (e) {
                                 e.preventDefault();
             
                                 /* Get the row as a parent of the link that was clicked on */
                                 var nRow = $(this).parents('tr')[0];
             
                                 if (nEditing !== null && nEditing != nRow) {
                                     /* Currently editing - but not this row - restore the old before continuing to edit mode */
                                     restoreRow(oTable, nEditing);
                                     editRow(oTable, nRow);
                                     nEditing = nRow;
                                 } else if (nEditing == nRow && this.innerHTML == "Save") {
                                     /* Editing this row and want to save it */
                                     saveRow(oTable, nEditing);
                                     nEditing = null;
                                     alert("Updated!");
                                 } else {
                                     /* No edit in progress - let's start one */
                                     editRow(oTable, nRow);
                                     nEditing = nRow;
                                 }
                             });
                             //*initialize editable datatable
                                      
                         });
            </script>
}
